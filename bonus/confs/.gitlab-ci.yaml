stages:
  - deploy

deploy-dev:
  image: wil42/playground:v1
  include:
    - project: groberto-gitlab
    file: manifests/deployment.yaml
  stage: deploy
  environnement:
    name: dev
  script:
    - apk add --no-cache git curl bash
    - curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.0.3/argocd-linux-amd64
    - chmod +x /usr/local/bin/argocd
    - curl -LO https://dl.k8s.io/release/v1.18.14/bin/linux/amd64/kubectl
    - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    - kubectl version --client
    - kubectl config set-cluster k8s --server="${MY_CLUSTER_URL}"
    - kubectl config set clusters.k8s.certificate-authority-data "${SERVICE_USER_CERTIFICATE}"
    - kubectl config set-credentials gitlab --token="${SERVICE_USER_TOKEN}"
    - kubectl config set-context ${CONTEXT_NAME} --cluster=k8s --user=gitlab
    - kubectl config use-context ${CONTEXT_NAME}
    - kubectl port-forward svc/argocd-server -n argocd 8080:443 2>&1 >/dev/null &
    - sleep 2s
    - argocd login localhost:8080 --username ${ARGOCD_USERNAME} --password ${ARGOCD_PASSWORD} --insecure
    - argocd app set argo-multi-container-app-k8s -p ports.client=3000
    - argocd app set argo-multi-container-app-k8s -p ports.server=5000
    - argocd app set argo-multi-container-app-k8s -p ports.postgres=5432
    - argocd app sync argo-multi-container-app-k8s
  when: manual
  tags:
    - gitlab-org
